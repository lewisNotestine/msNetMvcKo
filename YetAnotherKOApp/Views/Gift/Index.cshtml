@model YetAnotherKOApp.Models.GiftModel[]
@using System.Web.Script.Serialization


@{
    ViewBag.Title = "Gifts";
}

<h2>Yet another Knockout demo</h2>

<p>You have asked for <span data-bind="text: gifts().length">BARF &nbsp;</span> gift(s)</p>

<table>
    <tbody data-bind="template: { name: 'giftRowTemplate', foreach: gifts }"></tbody>
</table>

<button data-bind="click: addGift">Add Gift</button>

<script src="~/Scripts/jquery-1.7.1.js" type="text/javascript"></script>
<script src="~/Scripts/knockout-2.1.0.js" type="text/javascript"></script>

<script type="text/javascript">    
    $(document).ready(function () {
        var self = this;
        var initialData = ['barf', 'ass' ]; //@(new JavaScriptSerializer().Serialize(Model));
        var viewModel = {
            gifts: ko.observableArray(initialData),
            addGift: function () {
                this.gifts.push({ Title: "", Price: "" });
            },
            removeGift: function() {
                this.gifts.remove(gift);
            }
        };

        ko.applyBindings(viewModel, document.body);
    });
</script>

<script type="text/html" id="giftRowTemplate">
    <tr>
        <td>Gift Name: <input data-bind="value: Title" /></td>
        <td>Price: $ <input data-bind="value: Price" /></td>
        <td><a href="#" data-bind="clidk: function() { viewModel.removeGift($data) }">Delete</a></td>
    </tr>
</script>